name: Monthly rootfs build

on:
  schedule:
    - cron: "0 2 1 * *" # Runs at 02:00 UTC on the 1st of every month
  workflow_dispatch: # Allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      # No 'options: --workdir' here, let GitHub Actions handle the default mounting.
    env:
      GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for tag creation later
          # No 'path:' here. Let checkout put it in the default location,
          # which will be mounted to /github/workspace inside the container.

      - name: Setup GPG
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" > /tmp/gpg.key
          gpg --batch --import /tmp/gpg.key
          rm -f /tmp/gpg.key

      - name: Install build deps AND Git
        run: |
          pacman -Sy --noconfirm base base-devel arch-install-scripts squashfs-tools git

      - name: Build rootfs
        # Ensure build.sh runs from the correct directory
        working-directory: /github/workspace # Add this for consistency if build.sh expects repo root
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
        run: |
          chmod +x build.sh
          ./build.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rootfs
          path: out/rootfs.squashfs

      - name: Generate and push monthly release tag
        id: create_tag
        # --- IMPORTANT: Explicitly set working-directory for this step ---
        working-directory: /github/workspace
        run: |
          RELEASE_DATE=$(date +'%Y-%m-%d')
          NEW_TAG="monthly-release-${RELEASE_DATE}"

          echo "Attempting to create and push tag: $NEW_TAG"

          git config user.name "GitHub Actions Bot"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
            echo "Tag $NEW_TAG already exists. Skipping tag creation."
            echo "::set-output name=tag_created::false"
          else
            git tag -a "$NEW_TAG" -m "Monthly automated release for $RELEASE_DATE"
            git push origin "$NEW_TAG"
            echo "Tag $NEW_TAG created and pushed successfully."
            echo "::set-output name=tag_created::true"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release with artifact
        if: steps.create_tag.outputs.tag_created == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: out/rootfs.squashfs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
